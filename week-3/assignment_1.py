# -*- coding: utf-8 -*-
"""assignment-1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L0TgaTyi_KjfnSa3EjhI5M2ue_6ER3Bd
"""

import sqlalchemy

user = 'peter'
password = 'PeterWoW1!'

sql_conn_str = 'postgresql://{user}:{password}@grepp-data.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev'.format(
    user=user,
    password=password
)

sqlalchemy.create_engine(sql_conn_str)

# Commented out IPython magic to ensure Python compatibility.
# %load_ext sql

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# SELECT * FROM raw_data.session_timestamp LIMIT 10

# Commented out IPython magic to ensure Python compatibility.
# %sql sql_conn_str

# Commented out IPython magic to ensure Python compatibility.
# %sql postgresql://peter:PeterWoW1!@grepp-data.cduaw970ssvt.ap-northeast-2.redshift.amazonaws.com:5439/dev

# Commented out IPython magic to ensure Python compatibility.
# %%sql 
# 
# CREATE TABLE adhoc.peter_channel (
#     channel varchar(32) primary key
# );

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# INSERT INTO adhoc.peter_channel VALUES ('FACEBOOK'), ('GOOGLE');
# 
# SELECT * FROM adhoc.peter_channel;

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# DROP TABLE adhoc.peter_channel;
# 
# CREATE TABLE adhoc.peter_channel AS
#   SELECT DISTINCT channel
#   FROM raw_data.user_session_channel;

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# SELECT * 
# FROM adhoc.peter_channel 
# LIMIT 10;

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# ALTER TABLE adhoc.peter_channel
# RENAME channel to channelname;
# 
# INSERT INTO adhoc.peter_channel VALUES ('TIKTOK');

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# SELECT *
# FROM adhoc.peter_channel;

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# SELECT COUNT(1)
# FROM raw_data.session_timestamp;

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# SELECT usc.channel, COUNT(1)
# FROM raw_data.user_session_channel usc
# JOIN raw_data.session_timestamp st
# ON st.sessionid = usc.sessionid
# GROUP BY 1;

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# SELECT COUNT(1)
# FROM raw_data.user_session_channel usc
# WHERE usc.channel in ('Google','Facebook');

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# SELECT COUNT(1)
# FROM raw_data.user_session_channel usc
# WHERE channel ilike 'Google' or channel ilike 'Facebook';

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# SELECT DISTINCT channel
# FROM raw_data.user_session_channel
# WHERE channel ILIKE '%o%';

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# SELECT DISTINCT channel
# FROM raw_data.user_session_channel
# WHERE channel NOT ILIKE '%o%';

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# SELECT 
#   LEN(channelname),
#   UPPER(channelname),
#   LOWER(channelname),
#   LEFT(channelname, 4)
# FROM adhoc.peter_channel;

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# SELECT EXTRACT(HOUR FROM st.ts), COUNT(1)
# FROM raw_data.user_session_channel usc
# JOIN raw_data.session_timestamp st
# ON st.sessionid = usc.sessionid
# GROUP BY 1
# ORDER BY 2 DESC;

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# SELECT usc.channel, COUNT(1)
# FROM raw_data.channel c
# JOIN raw_data.user_session_channel usc
# ON usc.channel = c.channelname
# GROUP BY 1;

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# 
# SELECT st.ts, usc.channel, ROW_NUMBER() OVER (PARTITION BY usc.userid ORDER BY st.ts)
# FROM raw_data.user_session_channel usc
# JOIN raw_data.session_timestamp st
# ON usc.sessionid = st.sessionid
# WHERE userid = 251
# ORDER BY 1;

